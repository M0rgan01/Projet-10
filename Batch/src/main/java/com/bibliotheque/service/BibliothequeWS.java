
package com.bibliotheque.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BibliothequeWS", targetNamespace = "http://service.bibliotheque.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BibliothequeWS {


    /**
     * 
     * @param mail
     * @param user
     * @return
     *     returns com.bibliotheque.service.User
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createUser", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateUserResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/createUserRequest", output = "http://service.bibliotheque.com/BibliothequeWS/createUserResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createUser/Fault/BibliothequeException")
    })
    public User createUser(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "mail", targetNamespace = "")
        Mail mail)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "returnLoan", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ReturnLoan")
    @ResponseWrapper(localName = "returnLoanResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ReturnLoanResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/returnLoanRequest", output = "http://service.bibliotheque.com/BibliothequeWS/returnLoanResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/returnLoan/Fault/BibliothequeException")
    })
    public void returnLoan(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param pseudo
     * @return
     *     returns java.util.List<com.bibliotheque.service.Roles>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListRoles", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListRoles")
    @ResponseWrapper(localName = "getListRolesResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListRolesResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListRolesRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListRolesResponse")
    public List<Roles> getListRoles(
        @WebParam(name = "pseudo", targetNamespace = "")
        String pseudo);

    /**
     * 
     * @param user
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveUser", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SaveUser")
    @ResponseWrapper(localName = "saveUserResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SaveUserResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/saveUserRequest", output = "http://service.bibliotheque.com/BibliothequeWS/saveUserResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/saveUser/Fault/BibliothequeException")
    })
    public void saveUser(
        @WebParam(name = "user", targetNamespace = "")
        User user)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param userId
     * @return
     *     returns com.bibliotheque.service.Mail
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMail", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetMail")
    @ResponseWrapper(localName = "getMailResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetMailResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getMailRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getMailResponse")
    public Mail getMail(
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId);

    /**
     * 
     * @param email
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "sendToken", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SendToken")
    @ResponseWrapper(localName = "sendTokenResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SendTokenResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/sendTokenRequest", output = "http://service.bibliotheque.com/BibliothequeWS/sendTokenResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/sendToken/Fault/BibliothequeException")
    })
    public void sendToken(
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param book
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createBook", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateBook")
    @ResponseWrapper(localName = "createBookResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateBookResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/createBookRequest", output = "http://service.bibliotheque.com/BibliothequeWS/createBookResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createBook/Fault/BibliothequeException")
    })
    public void createBook(
        @WebParam(name = "book", targetNamespace = "")
        Book book)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBook", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.DeleteBook")
    @ResponseWrapper(localName = "deleteBookResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.DeleteBookResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/deleteBookRequest", output = "http://service.bibliotheque.com/BibliothequeWS/deleteBookResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/deleteBook/Fault/BibliothequeException")
    })
    public void deleteBook(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param size
     * @param kind
     * @param motCle
     * @param available
     * @param page
     * @return
     *     returns com.bibliotheque.service.Pagination
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listBook", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ListBook")
    @ResponseWrapper(localName = "listBookResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ListBookResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/listBookRequest", output = "http://service.bibliotheque.com/BibliothequeWS/listBookResponse")
    public Pagination listBook(
        @WebParam(name = "mot-cle", targetNamespace = "")
        String motCle,
        @WebParam(name = "kind", targetNamespace = "")
        String kind,
        @WebParam(name = "available", targetNamespace = "")
        boolean available,
        @WebParam(name = "page", targetNamespace = "")
        int page,
        @WebParam(name = "size", targetNamespace = "")
        int size);

    /**
     * 
     * @param mail
     * @param userId
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveMail", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SaveMail")
    @ResponseWrapper(localName = "saveMailResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SaveMailResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/saveMailRequest", output = "http://service.bibliotheque.com/BibliothequeWS/saveMailResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/saveMail/Fault/BibliothequeException")
    })
    public void saveMail(
        @WebParam(name = "mail", targetNamespace = "")
        Mail mail,
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param userId
     * @param bookId
     * @throws BibliothequeException_Exception
     * @throws ParseException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createLoan", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateLoan")
    @ResponseWrapper(localName = "createLoanResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateLoanResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/createLoanRequest", output = "http://service.bibliotheque.com/BibliothequeWS/createLoanResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createLoan/Fault/BibliothequeException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createLoan/Fault/ParseException")
    })
    public void createLoan(
        @WebParam(name = "book_id", targetNamespace = "")
        Long bookId,
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception, ParseException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<com.bibliotheque.service.Kind>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListKind", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListKind")
    @ResponseWrapper(localName = "getListKindResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListKindResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListKindRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListKindResponse")
    public List<Kind> getListKind();

    /**
     * 
     * @param email
     * @param token
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDaysExtend", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetDaysExtend")
    @ResponseWrapper(localName = "getDaysExtendResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetDaysExtendResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getDaysExtendRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getDaysExtendResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/getDaysExtend/Fault/BibliothequeException")
    })
    public int getDaysExtend()
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<com.bibliotheque.service.Kind>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListKind", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListKind")
    @ResponseWrapper(localName = "getListKindResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListKindResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListKindRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListKindResponse")
    public List<Kind> getListKind();

    /**
     * 
     * @param userId
     * @param bookId
     * @throws BibliothequeException_Exception
     * @throws ParseException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createLoan", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateLoan")
    @ResponseWrapper(localName = "createLoanResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateLoanResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/createLoanRequest", output = "http://service.bibliotheque.com/BibliothequeWS/createLoanResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createLoan/Fault/BibliothequeException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createLoan/Fault/ParseException")
    })
    public void createLoan(
        @WebParam(name = "book_id", targetNamespace = "")
        Long bookId,
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception, ParseException_Exception
    ;

    /**
     * 
     * @param pseudo
     * @return
     *     returns java.util.List<com.bibliotheque.service.Roles>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListRoles", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListRoles")
    @ResponseWrapper(localName = "getListRolesResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListRolesResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListRolesRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListRolesResponse")
    public List<Roles> getListRoles(
        @WebParam(name = "pseudo", targetNamespace = "")
        String pseudo);

    /**
     * 
     * @return
     *     returns int
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDaysLoan", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetDaysLoan")
    @ResponseWrapper(localName = "getDaysLoanResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetDaysLoanResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getDaysLoanRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getDaysLoanResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/getDaysLoan/Fault/BibliothequeException")
    })
    public int getDaysLoan()
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param userId
     * @param loanID
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "extendLoan", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ExtendLoan")
    @ResponseWrapper(localName = "extendLoanResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ExtendLoanResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/extendLoanRequest", output = "http://service.bibliotheque.com/BibliothequeWS/extendLoanResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/extendLoan/Fault/BibliothequeException")
    })
    public void extendLoan(
        @WebParam(name = "Loan_ID", targetNamespace = "")
        Long loanID,
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param bookID
     * @return
     *     returns java.util.List<com.bibliotheque.service.Loan>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListLoanLate", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanLate")
    @ResponseWrapper(localName = "getListLoanLateResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanLateResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListLoanLateRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListLoanLateResponse")
    public List<Loan> getListLoanLate();

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<com.bibliotheque.service.Loan>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListLoanLateByUserID", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanLateByUserID")
    @ResponseWrapper(localName = "getListLoanLateByUserIDResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanLateByUserIDResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListLoanLateByUserIDRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListLoanLateByUserIDResponse")
    public List<Loan> getListLoanLateByUserID(
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param userId
     * @param bookID
     * @return
     *     returns java.util.List<com.bibliotheque.service.Reservation>
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDaysLoan", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetDaysLoan")
    @ResponseWrapper(localName = "getDaysLoanResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetDaysLoanResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getDaysLoanRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getDaysLoanResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/getDaysLoan/Fault/BibliothequeException")
    })
    public int getDaysLoan()
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param mail
     * @param userId
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveMail", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SaveMail")
    @ResponseWrapper(localName = "saveMailResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SaveMailResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/saveMailRequest", output = "http://service.bibliotheque.com/BibliothequeWS/saveMailResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/saveMail/Fault/BibliothequeException")
    })
    public void saveMail(
        @WebParam(name = "mail", targetNamespace = "")
        Mail mail,
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param userId
     * @param bookID
     * @return
     *     returns com.bibliotheque.service.Reservation
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createReservation", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateReservation")
    @ResponseWrapper(localName = "createReservationResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateReservationResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/createReservationRequest", output = "http://service.bibliotheque.com/BibliothequeWS/createReservationResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createReservation/Fault/BibliothequeException")
    })
    public Reservation createReservation(
        @WebParam(name = "Book_ID", targetNamespace = "")
        Long bookID,
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<com.bibliotheque.service.Reservation>
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListReservationByUser", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListReservationByUser")
    @ResponseWrapper(localName = "getListReservationByUserResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListReservationByUserResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListReservationByUserRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListReservationByUserResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/getListReservationByUser/Fault/BibliothequeException")
    })
    public List<Reservation> getListReservationByUser(
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param passWord
     * @param pseudo
     * @return
     *     returns java.util.List<com.bibliotheque.service.Loan>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListLoanByUserID", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanByUserID")
    @ResponseWrapper(localName = "getListLoanByUserIDResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanByUserIDResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListLoanByUserIDRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListLoanByUserIDResponse")
    public List<Loan> getListLoanByUserID(
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId);

    /**
     * 
     * @param password
     * @param passwordConfirm
     * @param email
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "doConnection", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.DoConnection")
    @ResponseWrapper(localName = "doConnectionResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.DoConnectionResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/doConnectionRequest", output = "http://service.bibliotheque.com/BibliothequeWS/doConnectionResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/doConnection/Fault/BibliothequeException")
    })
    public User doConnection(
        @WebParam(name = "pseudo", targetNamespace = "")
        String pseudo,
        @WebParam(name = "passWord", targetNamespace = "")
        String passWord)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param book
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateBook", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.UpdateBook")
    @ResponseWrapper(localName = "updateBookResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.UpdateBookResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/updateBookRequest", output = "http://service.bibliotheque.com/BibliothequeWS/updateBookResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/updateBook/Fault/BibliothequeException")
    })
    public void updateBook(
        @WebParam(name = "book", targetNamespace = "")
        Book book)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.DeleteUserResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/deleteUserRequest", output = "http://service.bibliotheque.com/BibliothequeWS/deleteUserResponse")
    public void deleteUser(
        @WebParam(name = "id", targetNamespace = "")
        Long id);

    /**
     * 
     * @param user
     * @return
     *     returns com.bibliotheque.service.User
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createUser", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.CreateUserResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/createUserRequest", output = "http://service.bibliotheque.com/BibliothequeWS/createUserResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/createUser/Fault/BibliothequeException")
    })
    public User createUser(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "mail", targetNamespace = "")
        Mail mail)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param pseudo
     * @return
     *     returns java.util.List<com.bibliotheque.service.Roles>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListRoles", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListRoles")
    @ResponseWrapper(localName = "getListRolesResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListRolesResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListRolesRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListRolesResponse")
    public List<Roles> getListRoles(
        @WebParam(name = "pseudo", targetNamespace = "")
        String pseudo);

    /**
     * 
     * @param passWord
     * @param pseudo
     * @return
     *     returns java.util.List<com.bibliotheque.service.Loan>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListLoanByUserID", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanByUserID")
    @ResponseWrapper(localName = "getListLoanByUserIDResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetListLoanByUserIDResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getListLoanByUserIDRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getListLoanByUserIDResponse")
    public List<Loan> getListLoanByUserID(
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId);

    /**
     * 
     * @param email
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "sendToken", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SendToken")
    @ResponseWrapper(localName = "sendTokenResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.SendTokenResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/sendTokenRequest", output = "http://service.bibliotheque.com/BibliothequeWS/sendTokenResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/sendToken/Fault/BibliothequeException")
    })
    public void sendToken(
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param email
     * @param token
     * @throws BibliothequeException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "validateToken", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ValidateToken")
    @ResponseWrapper(localName = "validateTokenResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.ValidateTokenResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/validateTokenRequest", output = "http://service.bibliotheque.com/BibliothequeWS/validateTokenResponse", fault = {
        @FaultAction(className = BibliothequeException_Exception.class, value = "http://service.bibliotheque.com/BibliothequeWS/validateToken/Fault/BibliothequeException")
    })
    public void validateToken(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws BibliothequeException_Exception
    ;

    /**
     * 
     * @param userId
     * @return
     *     returns com.bibliotheque.service.Mail
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMail", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetMail")
    @ResponseWrapper(localName = "getMailResponse", targetNamespace = "http://service.bibliotheque.com/", className = "com.bibliotheque.service.GetMailResponse")
    @Action(input = "http://service.bibliotheque.com/BibliothequeWS/getMailRequest", output = "http://service.bibliotheque.com/BibliothequeWS/getMailResponse")
    public Mail getMail(
        @WebParam(name = "user_id", targetNamespace = "")
        Long userId);

}
